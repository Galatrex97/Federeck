import { Message, MessageEmbed } from "discord.js";
import BaseCommand from "../../Structures/Command";
import Lyon from "../../Client";

export class NameCommand extends BaseCommand {
constructor() {
  super({
    name: "",
    aliases: [],
    description: "",   
    usage: "",
    category: "",
    cooldown: 0,
    botPerms: [],
    userPerms: [],
    devOnly: false,
    guildOnly: false,
  })
};

/**
 * 
 * @param { Lyon } client 
 * @param { Message } message 
 * @param { String[] } args 
 */


  run = async(client: Lyon, message: Message, args) => {
  
  };
};

import {
  Client,
  CommandInteraction,
  MessageEmbed,
  TextChannel,
} from "discord.js";
import { interactionCommand } from "../../Interfaces";
export const Interaction: interactionCommand = {
  name: "",
  description: "",
  options: [
    {
      name: "",
      description: "",
      type: "",
      required: ,
    },
  ],
  /**
   *
   * @param {Client} client
   * @param {CommandInteraction} interaction
   * @param {String[]} args
   */
  run: async (client, interaction) => {

  },
};


